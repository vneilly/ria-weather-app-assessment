name: PR Automation

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  fill-template:
    if: github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Auto-fill PR description
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const branch = pr.head.ref;
            // capture the issue number for any of the allowed types
            const match = branch.match(/^(?:feature|fix|chore|docs|refactor|test)\/(\d+)-/);
            const issue = match ? match[1] : '';
            const newBody = (pr.body || '')
              .replace(/<ISSUE_NUMBER>/g, issue)
              .replace(/<BRANCH_NAME>/g, branch);
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            });

  branch-name-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Enforce branch naming
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.payload.pull_request.head.ref;
            const pattern = /^(?:feature|fix|chore|docs|refactor|test)\/\d+-[a-z0-9]+(?:-[a-z0-9]+)*$/;
            if (!pattern.test(branch)) {
              core.setFailed(
                `Invalid branch name: "${branch}".\n` +
                `Please use "<type>/<issue-number>-<description>" where <type> is one of:\n` +
                `feature, fix, chore, docs, refactor, or test.\n` +
                `Example: feature/1234-add-new-feature.`
              );
            }
